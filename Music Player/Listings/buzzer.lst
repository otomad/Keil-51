C51 COMPILER V9.60.0.0   BUZZER                                                            07/03/2021 03:42:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BUZZER
OBJECT MODULE PLACED IN .\Objects\buzzer.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE buzzer.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\buzzer.lst) O
                    -BJECT(.\Objects\buzzer.obj)

line level    source

   1          #include "public.h"
   2          #include <math.h>
   3          
   4          typedef unsigned int uint;
   5          typedef unsigned char uchar;
   6          
   7          sbit buzzer = P3 ^ 6; //Buzzer port
   8          uint beepCms = 0;
   9          
  10          /**
  11           * @brief  Buzzer private delay function, delay for 500 microseconds.
  12           * @param  None
  13           * @retval None
  14           */
  15          void buzzerDelay500Us() { //@12.000MHz
  16   1              uchar i;
  17   1              _nop_();
  18   1              i = 247;
  19   1              while (--i);
  20   1      }
  21          
  22          /**
  23           * @brief  Buzzer private delay function, used for change pitch.
  24           * @param  {unsigned int} i - Delay time which is for pitch.
  25           * If i is equal to 10, the delay time is about 100Î¼s, and different sound effects can be achieved by mod
             -ifying the delay time.
  26           * @retval None
  27           */
  28          void buzzerDelay(uint i) {
  29   1              while (--i);
  30   1      }
  31          
  32          /**
  33           * @brief  Transform Hz to cms.
  34           * @param  {unsigned int} hz - Hz.
  35           * @retval {unsigned int} cms.
  36           */
  37          unsigned int hz2cms(uint hz) {
  38   1              if (!hz) return 0;
  39   1              return 1e5 / hz;
  40   1      }
  41          
  42          /**
  43           * @brief  Buzzer singing!
  44           * @param  {unsigned int} ms - Singing time, range: 0~32767
  45           * @retval None
  46           */
  47          uchar beepTime(uint hz, uint ms) {
  48   1              if (!TR0) {
  49   2                      uint i,
  50   2                              cms = hz2cms(hz),
  51   2                              len = ms / cms * 100;
  52   2                      if (!hz) return false;
  53   2                      for (i = 0; i < len; i++) {
C51 COMPILER V9.60.0.0   BUZZER                                                            07/03/2021 03:42:49 PAGE 2   

  54   3                              buzzer = ~buzzer;
  55   3                              buzzerDelay(cms);
  56   3                              if (MatrixKey()) return false;
  57   3                      }
  58   2              } else {
  59   2                      uint cms = hz2cms(hz);
  60   2                      if (!hz) return false;
  61   2                      setTimeout(ms);
  62   2                      while (true) {
  63   3                              buzzer = ~buzzer;
  64   3                              buzzerDelay(cms);
  65   3                              if (MatrixKey()) return false;
  66   3                              if (timeout) break;
  67   3                      }
  68   2              }
  69   1              return true;
  70   1      }
  71          
  72          void beep(uint hz) {
  73   1              uint cms = hz2cms(hz);
  74   1              while (hz) {
  75   2                      buzzer = ~buzzer;
  76   2                      buzzerDelay(cms);
  77   2                      if (!MatrixKeyPress()) break;
  78   2              }
  79   1      //      beepCms = hz2cms(hz);
  80   1              //if (!MatrixKeyPress()) beepCms = 0;
  81   1      }
  82          
  83          uint key2hz(int key) {
  84   1              static uint CENTER_A = 880;
  85   1              return CENTER_A * pow(2, key / 12.0);
  86   1      }
  87          
  88          /*void setBeepHz(uint hz) {
  89                  beepCms = hz2cms(hz);
  90          }
  91          
  92          void beepSong(void) {
  93                  while (beepCms) {
  94                          buzzer = ~buzzer;
  95                          buzzerDelay(beepCms);
  96                  }
  97          }
  98          
  99          void Timer1Routine() interrupt 3 {
 100                  static unsigned int T1Count;
 101                  Timer1InitValue();
 102                  T1Count++;
 103                  if (T1Count >= beepCms/* && beepCms != 0*) {
 104                          T1Count = 0;
 105                          buzzer = ~buzzer;
 106                  }
 107          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      14
C51 COMPILER V9.60.0.0   BUZZER                                                            07/03/2021 03:42:49 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
