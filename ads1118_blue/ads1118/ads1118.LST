C51 COMPILER V9.60.0.0   ADS1118                                                           07/02/2021 23:37:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADS1118
OBJECT MODULE PLACED IN ads1118.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ads1118.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include "ads1118.h"
   3          
   4          
   5          void delay_ms(uint z)
   6          {
   7   1              uint x;
   8   1              for(;z>0;z--)
   9   1              for(x=110;x>0;x--);
  10   1      }
  11          void ADS1118_Init(void)
  12          {
  13   1              CS_H;
  14   1              SCLK_H;
  15   1              MOSI_L;
  16   1      }
  17          union aa{
  18                     uint dat1[2];
  19                                 ulong dat2;
  20                                                  };
  21          uint Write_ADS1118(uint dat,uchar mode)
  22          {
  23   1      //      uint temp;
  24   1              union aa temp;
  25   1              union aa temp1;
  26   1      //      ulong Value;
  27   1              uchar i;                
  28   1        if(mode == 1)dat |= 0x8000;   
  29   1              temp.dat1[1] = dat;
  30   1        temp.dat1[0] = dat;
  31   1              SCLK_L;
  32   1              CS_L;
  33   1              delay_ms(1);
  34   1              for(i=0;i<32;i++)
  35   1              {
  36   2                      if(temp.dat2 & 0x80000000)MOSI_H;
  37   2                      else MOSI_L;
  38   2                      temp.dat2 <<= 1;
  39   2                      _nop_();
  40   2                      SCLK_H;
  41   2                      _nop_();
  42   2                      SCLK_L;
  43   2                      _nop_();
  44   2                      
  45   2                      temp1.dat2 <<= 1;
  46   2                      if(READ_MISO)temp1.dat2 |= 0x01;
  47   2                      _nop_();
  48   2              }
  49   1        CS_H;
  50   1              SCLK_L;
  51   1              MOSI_L;
  52   1              MISO_L;
  53   1              printf("temp %d\n\r",temp1.dat1[0]);
  54   1              printf("temp %#X\n\r",temp1.dat1[1]);
  55   1              return temp1.dat1[0];
C51 COMPILER V9.60.0.0   ADS1118                                                           07/02/2021 23:37:02 PAGE 2   

  56   1      }
  57          
  58          /*******************************************************************************
  59          //函数名称：ADS_SEL_Read（）
  60          //函数功能：读取各路电压，通过两个switch选择读取不同的通道
  61          //输    入：road:增益放大器两端的电压选择，并选择测几路电压
  62          //          Ref: 选择参考电压，有6种选择
  63          //输    出：dat：16位ad转换数据
  64          //备    注：这一次读出的转换数据是上一次的转换数据，不要混淆.这里选择的是单次
  65                      转换电压值，当然，也可以选择多次转换,通过寄存器的第8位可以设置
  66          //日    期：2013.6.8
  67          *******************************************************************************/
  68          int ADS_SEL_Read(uchar road,uchar Ref)         //测几路电压
  69          {
  70   1          int dat = 0;
  71   1          uint Config_Value = 0x008b;                     //默认低8位，DOUT带上拉电阻
  72   1          switch(road)
  73   1          {
  74   2          case 0:  Config_Value += 0x0000;break;    //AINP = AIN0 and AINN = AIN1 (default)
  75   2          case 1:  Config_Value += 0x1000;break;    //AINP = AIN0 and AINN = AIN3
  76   2          case 2:  Config_Value += 0x2000;break;    //AINP = AIN1 and AINN = AIN3
  77   2          case 3:  Config_Value += 0x3000;break;    //AINP = AIN2 and AINN = AIN3
  78   2          case 4:  Config_Value += 0x4000;break;    //AINP = AIN0 and AINN = GND
  79   2          case 5:  Config_Value += 0x5000;break;    //AINP = AIN1 and AINN = GND
  80   2          case 6:  Config_Value += 0x6000;break;    //AINP = AIN2 and AINN = GND
  81   2          case 7:  Config_Value += 0x7000;break;    //AINP = AIN3 and AINN = GND
  82   2          default : break;
  83   2          }
  84   1          switch(Ref)
  85   1          {
  86   2          case 0:  Config_Value += 0x0000;break;    //000 : FS = ±6.144V(1)
  87   2          case 1:  Config_Value += 0x0200;break;    //001 : FS = ±4.096V(1)
  88   2          case 2:  Config_Value += 0x0400;break;    //002 : FS = ±2.048V(1)
  89   2          case 3:  Config_Value += 0x0600;break;    //003 : FS = ±1.024V(1)
  90   2          case 4:  Config_Value += 0x0800;break;    //004 : FS = ±0.512V(1)
  91   2          case 5: case 6: case 7: Config_Value += 0x0a00;break;    //005 : FS = ±0.256V(1)
  92   2          default : break;
  93   2          }
  94   1          CS_L;
  95   1          dat = Write_ADS1118(Config_Value,1);
  96   1          _nop_();
  97   1          CS_H;
  98   1          return dat;
  99   1      }
 100          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
