C51 COMPILER V9.60.0.0   ESP8266                                                           04/11/2021 18:03:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ESP8266
OBJECT MODULE PLACED IN ESP8266.OBJ
COMPILER INVOKED BY: E:\Keil5_533\C51\BIN\C51.EXE ESP8266.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**
   2          单片机最高可设置的波特率为9600，所以先通过下载器把ESP8266改为9600波特率(AT+CIOBAUD=9600)；
   3          单片机可设置的波特率通过串口中断初始化（波特率）设置
   4          
   5          **/
   6          #include <REGX52.H>
   7          
   8          
   9          
  10          /**
  11            * @brief  延迟函数
  12            * @param  us,ms
  13            * @retval 无
  14            **/
  15          
  16          void delay_10us(int us)
  17          {
  18   1        while(us--);
  19   1      }
  20          
  21          void delay_ms(int ms)
  22          {
  23   1        int i,j;
  24   1        for(i=ms;i>0;i--)
  25   1          for(j=114;j>0;j--);
  26   1      }
  27          
  28          
  29          
  30          
  31          /**
  32          * @brief  实现串口向单片机SBUF发送一个字节，并一个一个存储下来，形成一串字符
  33            * @param  dat
  34            * @retval dat[] 
  35            **/
  36          void UART_SendByte(char dat)
  37          {
  38   1        ES=0; //关闭串口中断
  39   1        TI=0; //清发送完毕中断请求标志位
  40   1        SBUF=dat; //发送
  41   1        while(TI==0); //等待发送完毕
  42   1        TI=0; //清发送完毕中断请求标志位
  43   1        ES=1; //允许串口中断
  44   1      }
  45          
  46          
  47          
  48          /**
  49          * @brief  实现发送指令，并换新行
  50            * @param  *cmd
  51            * @retval 
  52            **/
  53          void ESP8266_SendCmd(char *cmd)
  54          {
  55   1        while(*cmd!='\0') //遇到空格跳出循环  
C51 COMPILER V9.60.0.0   ESP8266                                                           04/11/2021 18:03:44 PAGE 2   

  56   1        {
  57   2          UART_SendByte(*cmd);//依次发送字节，*（cmd+1）
  58   2          delay_10us(5);//延迟5us
  59   2          cmd++;  
  60   2        }
  61   1        delay_10us(5);
  62   1        UART_SendByte('\r');//回车
  63   1        delay_10us(5);
  64   1        UART_SendByte('\n');//换行
  65   1        delay_ms(1000);
  66   1      }
  67          
  68          
  69          /**
  70            * @brief  ESP8266――AP-SERVER模式初始化，带静态IP
  71            * @param  
  72            * @retval 
  73            **/
  74          
  75          void ESP8266_ModeInit(void)
  76          {
  77   1        
  78   1      
  79   1        ESP8266_SendCmd("AT+CWMODE=2");//设置路由器模式 1 staTIon模式 2 AP点 路由器模式 3 station+AP混合模式
  80   1        ESP8266_SendCmd("AT+CWSAP=\"ESP8266\",\"12345678\",11,3"); //设置WIFI热点名及密码
  81   1        //  ESP8266_SendCmd("AT+RST");//重新启动wifi模块，前面两个设置不会受影响
  82   1        ESP8266_SendCmd("AT+CIPAP=\"192.168.4.1\"");//设置静态IP
  83   1        ESP8266_SendCmd("AT+CIPMUX=1"); //开启多连接模式，允许多个各客户端接入
  84   1        ESP8266_SendCmd("AT+CIPSERVER=1,8080"); //启动TCP/IP 端口为8080 实现基于网络控制  
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    139    ----
   CONSTANT SIZE    =    102    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
